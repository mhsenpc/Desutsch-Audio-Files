@page "/"
@layout MainLayout
@using Desutsch_Audio_Files.Data
@inject StageService stageSerivce
@inject CourseProvider courseProvider



@for (int i = 1; i <= stageSerivce.Count ;i++)
{
    var local_i = i;
    if(selectedStage == i){
       <button @onclick="() => SwitchStage(local_i)">[@i]</button>
    }
    else{
        <button @onclick="() => SwitchStage(local_i)">@i</button>
    }
 
}

@foreach (var course in courses)
{
    @if(course.CurrentStage == selectedStage){
        <div style="border-style:solid;border-width:1px;">
            <button @onclick="() => DowngradeCourse(course)">&lt;</button>
            <span>@course.Name</span>
            <audio controls="controls" src="@course.Url" @onended="() => onEnd(course)" />
            <button @onclick="() => UpgradeCourse(course)">&gt;</button>
        </div>
    }
}

@code{
    public int selectedStage { get; set; } = 1;
    public List<Course> courses = new List<Course>();
    public string debug;

    protected override async Task OnInitializedAsync()
    {
         this.courses = courseProvider.GetCourses();
         SwitchStage(1);
    }

    public void onEnd(Course course){
        UpgradeCourse(course);
    }

    public void UpgradeCourse(Course course){
        course.CurrentStage++;
        courseProvider.UpdateCourse(course);
    }

    public void DowngradeCourse(Course course)
    {
        course.CurrentStage--;
        courseProvider.UpdateCourse(course);
    }


    public void SwitchStage(int stage){
        selectedStage = stage;
    }
}
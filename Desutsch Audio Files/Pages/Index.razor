@page "/"
@layout MainLayout
@using Desutsch_Audio_Files.Data
@inject StageService stageSerivce
@inject CourseProvider courseProvider



@for (int i = 1; i <= stageSerivce.Count ;i++)
{
    var local_i = i;
    string text = local_i.ToString();

    text += "(" + GetStageCount(i).ToString() + ")";
    if (selectedStage == local_i)
    {
        text = "[" + text.ToString() + "]";
    }
    
    <button class="stage-button" @onclick="() => SwitchStage(local_i)">@text</button>
}

@foreach (var course in courses)
{
    @if(course.CurrentStage == selectedStage){
        <div class="course-item">
            <span>@course.Index</span>
            <br/>
            <span>@course.Name</span>
            <br/>

            <button @onclick="() => DowngradeCourse(course)">&lt;</button>
            <button @onclick="() => course.PlayerLoaded = !course.PlayerLoaded">Load</button>
            <button @onclick="() => UpgradeCourse(course)">&gt;</button>

            @if(course.PlayerLoaded){
                <audio controls="controls" src="@course.Url" @onended="() => onEnd(course)" />
            }
        </div>
    }
}
<style>
    .stage-button{
        margin:10px;
    }

    .course-item{
        border-style: solid;
        border-width: 1px;
        margin-bottom:20px;
    }
</style>

@code{
    public int selectedStage { get; set; } = 1;
    public List<Course> courses = new List<Course>();

    protected override async Task OnInitializedAsync()
    {
         this.courses = courseProvider.GetCourses();
         SwitchStage(1);
    }

    public void onEnd(Course course){
        UpgradeCourse(course);
    }

    public void UpgradeCourse(Course course){
        course.CurrentStage++;
    }

    public void DowngradeCourse(Course course)
    {
        course.CurrentStage--;
    }


    public void SwitchStage(int stage){
        selectedStage = stage;
    }

    public int GetStageCount(int stage){
        return courses.Count(n => n.CurrentStage == stage);
    }
}